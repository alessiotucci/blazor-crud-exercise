@page "/Candidato"
@using MonusProject.Client.Shared.Models
@inject HttpClient Http


<h3>Candidato</h3>

<div class="card" hidden="@HideLabel">
    <p>Do you want to delete this item?</p>
    <button class="btn-outline-danger" @onclick="YesPlease">OK</button>
    <button class="btn-danger" @onclick="DontDelete">No</button>
</div>

@if (candy == null)
{
    <p><em>Loading...</em></p>
    
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome </th>
                <th>Cognome </th>
                <th> Skill</th>
                <th> button </th>
      
            </tr>
        </thead>
        <tbody>
            @foreach (var cand in candy)
            {
                <tr>
                    <td>@cand.Nome</td>
                    <td>@cand.Cognome</td>
                    <td> @cand.Skills</td>
                    <td>
                    <button class="btn-danger" @onclick="() => Delete(cand.CandidatoId)">delete </button>
                    </td>
                    <td>
                        <button class="btn-dark" @onclick="() => PassId(cand.CandidatoId)"> edit this </button>

                    </td>

                </tr>
                
            }
        </tbody>
    </table>
}
<div class="card">
    <form>
        <input type="text" @bind="value"  placeholder="Nome" required />
       <br />
        <input type="text" @bind="value1" placeholder="Cognome" required />
        <br />

        <select  class="form-select-sm" @bind=SkillId>


            @if (skills == null)
            {
                <p>Loading...</p>
            }
            else
            {
                
            
            @foreach (var skill in skills)
            {
                <option value="@skill.SkillId"> @skill.SkillName</option>
            }
            }
        </select>

        <br /> 
        <button class="btn-primary" @onclick="Add">  submit </button>

    </form>
</div>



<div class="card" hidden="@hidecard">
    <h3> aggiornamento</h3>
    <form>
        <input type="text" placeholder="Aggiorna il nome" @bind="UpNomeCandid" />
        <br />
        <input type="text" placeholder="aggiorna Il cognome" @bind="UpCognomeCandid" />
        <br />
        <input type="text" placeholder="aggiorna la skill" @bind="UpSkillCandid" />


        <button class="btn-outline-dark" @onclick="Edit">  aggiorna</button>
    </form>
</div>

<style>

    .card {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 20px;
        width: 300px;
        margin: 0 auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        background-color: #f8f8f8;
        text-align: center;
    }

        .card input[type="number"],
        .card input[type="text"],
        .card input[type="datetime"] {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
            transition: border-color 0.3s ease-in-out;
        }

            .card input[type="number"]:focus,
            .card input[type="text"]:focus,
            .card input[type="datetime"]:focus {
                border-color: #007bff;
            }
    .select {
        width: 100%;
        height: 35px;
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 5px;
        font-size: 16px;
        background-color: #f8f9fa;
        color: #495057;
    }

    .select:focus {
        border-color: lightgreen;
        outline: 0;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }

    .select option {
        padding: 10px;
    }

        .select option:checked {
            background: green;
            color: white;
        }
</style>

@code {
    public Candidato[]? candy;
    public Skill[] skills;

    public Skill oneSkill = new Skill();

    public string value;
    public string value1;

    public int SkillId;

    public string value2;

    public Candidato IlCandidato = new Candidato();


    // poppup nice
    public bool HideLabel = true;
    public int Confirmation = 0;
    // edit button is nice 
    public bool hidecard = true;
    public int bogus_id = 0;

    public Candidato UpCandidato = new Candidato();
    public string UpNomeCandid;
    public string UpCognomeCandid;
    public string UpSkillCandid;


    public async Task PassId(int id)
    {
        bogus_id = id;
        hidecard = false;
    }
    public async Task Edit()
    {
        UpCandidato.Nome = UpNomeCandid;
        UpCandidato.Cognome = UpCognomeCandid;
        var response = await Http.PutAsJsonAsync($"api/Candidato/{bogus_id}", UpCandidato);
        if (response.IsSuccessStatusCode)
            candy = await Http.GetFromJsonAsync<Candidato[]>("api/Candidato");

        hidecard = true;

    }



    protected override async Task OnInitializedAsync()
    {
        candy = await Http.GetFromJsonAsync<Candidato?[]>("api/Candidato");
        skills = await Http.GetFromJsonAsync<Skill?[]>("api/Skill");
    }

    public  async Task Add()
    {
       // oneSkill = await Http.GetFromJsonAsync<Skill>($"api/Skill/{SkillId}");
        IlCandidato.Nome = value;
        IlCandidato.Cognome = value1;
        //IlCandidato.Skills.Add(oneSkill);
        await AddCandidato(IlCandidato);
        //candy = await Http.GetFromJsonAsync<Candidato[]>("api/Candidato");

        
        
    }
    public  async Task AddCandidato(Candidato newCandidato)
    {
            var response = await Http.PostAsJsonAsync("api/Candidato", newCandidato);

    }
    public async Task Delete(int id)
    {
        HideLabel = false;

        var response = await Http.DeleteAsync($"api/Candidato/{id}");

        if (response.IsSuccessStatusCode)
        {
            // History item was successfully deleted, update the list
            candy = await Http.GetFromJsonAsync<Candidato[]>("api/Candidato");
        }
        else
        {
            candy = null;
            // Handle the case where deletion was not successful
                // You can show an error message or take appropriate action
         }
    }
    public void DontDelete()
    {
        HideLabel = true;
        Confirmation = 2;
        return;
    }

    public  void YesPlease()
    {
        Confirmation = 1;
        HideLabel = true;

        return;
    }

     
    

}



