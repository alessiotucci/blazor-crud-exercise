@page "/Skill"
@inject HttpClient Http

@using MonusProject.Client.Shared.Models

<h3>Skill</h3>

@if (skills == null)
{
    <p><em>Loading...</em></p>

}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Skill Name </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cand in skills)
            {
                <tr>
                    <td>@cand.SkillName</td>
                    <button class="btn-danger" @onclick="() => Delete(cand.SkillId)">delete </button>
                    <button class="btn-danger"> </button>

                </tr>

            }
        </tbody>
    </table>
}

<div class="card">
    <form>
        <input type="text"  placeholder="Skill" @bind="valSkill" />
        <br />
        <button class="btn-primary" @onclick="Add">  submit </button>
    </form>
</div>

<style>

    .card {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 20px;
        width: 300px;
        margin: 0 auto;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        background-color: #f8f8f8;
        text-align: center;
    }

        .card input[type="number"],
        .card input[type="text"],
        .card input[type="datetime"] {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
            transition: border-color 0.3s ease-in-out;
        }

            .card input[type="number"]:focus,
            .card input[type="text"]:focus,
            .card input[type="datetime"]:focus {
                border-color: #007bff;
            }
</style>

@code {
    public Skill[] skills;
    public string valSkill;

    public Skill NuovaSkill = new Skill();

    protected override async Task OnInitializedAsync()
    {
        skills = await Http.GetFromJsonAsync<Skill[]>("api/Skill");
    }

    public async Task Add()
    {
        NuovaSkill.SkillName = valSkill;
        AddSkill(NuovaSkill);
    }

    public async Task AddSkill(Skill nuovaskill)
    {
        var response = await Http.PostAsJsonAsync("api/Skill", nuovaskill);

    }


    public async Task Delete(int id)
    {

        var response = await Http.DeleteAsync($"api/Skill/{id}");

        if (response.IsSuccessStatusCode)
        {
            // History item was successfully deleted, update the list
            skills = await Http.GetFromJsonAsync<Skill[]>("api/Skill");
        }
        else
        {
            skills = null;
            // Handle the case where deletion was not successful
            // You can show an error message or take appropriate action
        }


    }
}
